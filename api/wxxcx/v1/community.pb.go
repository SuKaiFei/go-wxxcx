// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.9
// source: wxxcx/v1/community.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCommunitySettingNoticeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsOpenLikeWork     bool   `protobuf:"varint,1,opt,name=is_open_like_work,proto3" json:"is_open_like_work,omitempty"`
	IsOpenLikeComment  bool   `protobuf:"varint,2,opt,name=is_open_like_comment,proto3" json:"is_open_like_comment,omitempty"`
	IsOpenCommentReply bool   `protobuf:"varint,3,opt,name=is_open_comment_reply,proto3" json:"is_open_comment_reply,omitempty"`
	Id                 uint64 `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCommunitySettingNoticeReply) Reset() {
	*x = GetCommunitySettingNoticeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunitySettingNoticeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunitySettingNoticeReply) ProtoMessage() {}

func (x *GetCommunitySettingNoticeReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunitySettingNoticeReply.ProtoReflect.Descriptor instead.
func (*GetCommunitySettingNoticeReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{0}
}

func (x *GetCommunitySettingNoticeReply) GetIsOpenLikeWork() bool {
	if x != nil {
		return x.IsOpenLikeWork
	}
	return false
}

func (x *GetCommunitySettingNoticeReply) GetIsOpenLikeComment() bool {
	if x != nil {
		return x.IsOpenLikeComment
	}
	return false
}

func (x *GetCommunitySettingNoticeReply) GetIsOpenCommentReply() bool {
	if x != nil {
		return x.IsOpenCommentReply
	}
	return false
}

func (x *GetCommunitySettingNoticeReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCommunitySettingNoticeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid              string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp          uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign               string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid             string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Unionid            string `protobuf:"bytes,5,opt,name=unionid,proto3" json:"unionid,omitempty"`
	Id                 uint64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	IsOpenLikeWork     bool   `protobuf:"varint,7,opt,name=is_open_like_work,proto3" json:"is_open_like_work,omitempty"`
	IsOpenLikeComment  bool   `protobuf:"varint,8,opt,name=is_open_like_comment,proto3" json:"is_open_like_comment,omitempty"`
	IsOpenCommentReply bool   `protobuf:"varint,9,opt,name=is_open_comment_reply,proto3" json:"is_open_comment_reply,omitempty"`
}

func (x *UpdateCommunitySettingNoticeRequest) Reset() {
	*x = UpdateCommunitySettingNoticeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunitySettingNoticeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunitySettingNoticeRequest) ProtoMessage() {}

func (x *UpdateCommunitySettingNoticeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunitySettingNoticeRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommunitySettingNoticeRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateCommunitySettingNoticeRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *UpdateCommunitySettingNoticeRequest) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UpdateCommunitySettingNoticeRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *UpdateCommunitySettingNoticeRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UpdateCommunitySettingNoticeRequest) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *UpdateCommunitySettingNoticeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCommunitySettingNoticeRequest) GetIsOpenLikeWork() bool {
	if x != nil {
		return x.IsOpenLikeWork
	}
	return false
}

func (x *UpdateCommunitySettingNoticeRequest) GetIsOpenLikeComment() bool {
	if x != nil {
		return x.IsOpenLikeComment
	}
	return false
}

func (x *UpdateCommunitySettingNoticeRequest) GetIsOpenCommentReply() bool {
	if x != nil {
		return x.IsOpenCommentReply
	}
	return false
}

type AddCommunityCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid          string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp      string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign           string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid         string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	TopReplyId     uint64 `protobuf:"varint,5,opt,name=top_reply_id,proto3" json:"top_reply_id,omitempty"`
	ReplyId        uint64 `protobuf:"varint,6,opt,name=reply_id,proto3" json:"reply_id,omitempty"`
	TopReplyOpenid string `protobuf:"bytes,7,opt,name=top_reply_openid,proto3" json:"top_reply_openid,omitempty"`
	ReplyOpenid    string `protobuf:"bytes,8,opt,name=reply_openid,proto3" json:"reply_openid,omitempty"`
	Content        string `protobuf:"bytes,9,opt,name=content,proto3" json:"content,omitempty"`
	ArticleId      uint64 `protobuf:"varint,10,opt,name=article_id,proto3" json:"article_id,omitempty"`
}

func (x *AddCommunityCommentRequest) Reset() {
	*x = AddCommunityCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommunityCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommunityCommentRequest) ProtoMessage() {}

func (x *AddCommunityCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommunityCommentRequest.ProtoReflect.Descriptor instead.
func (*AddCommunityCommentRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{2}
}

func (x *AddCommunityCommentRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *AddCommunityCommentRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AddCommunityCommentRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *AddCommunityCommentRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *AddCommunityCommentRequest) GetTopReplyId() uint64 {
	if x != nil {
		return x.TopReplyId
	}
	return 0
}

func (x *AddCommunityCommentRequest) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *AddCommunityCommentRequest) GetTopReplyOpenid() string {
	if x != nil {
		return x.TopReplyOpenid
	}
	return ""
}

func (x *AddCommunityCommentRequest) GetReplyOpenid() string {
	if x != nil {
		return x.ReplyOpenid
	}
	return ""
}

func (x *AddCommunityCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddCommunityCommentRequest) GetArticleId() uint64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type CommunityUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Openid    string `protobuf:"bytes,2,opt,name=openid,proto3" json:"openid,omitempty"`
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,proto3" json:"avatar_url,omitempty"`
}

func (x *CommunityUser) Reset() {
	*x = CommunityUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommunityUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommunityUser) ProtoMessage() {}

func (x *CommunityUser) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommunityUser.ProtoReflect.Descriptor instead.
func (*CommunityUser) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{3}
}

func (x *CommunityUser) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommunityUser) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *CommunityUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CommunityUser) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

type AddCommunityCommentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content        string         `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Userinfo       *CommunityUser `protobuf:"bytes,3,opt,name=userinfo,proto3" json:"userinfo,omitempty"`
	ReplyUserinfo  *CommunityUser `protobuf:"bytes,4,opt,name=reply_userinfo,proto3" json:"reply_userinfo,omitempty"`
	TopReplyId     uint64         `protobuf:"varint,5,opt,name=top_reply_id,proto3" json:"top_reply_id,omitempty"`
	ReplyId        uint64         `protobuf:"varint,6,opt,name=reply_id,proto3" json:"reply_id,omitempty"`
	TopReplyOpenid string         `protobuf:"bytes,7,opt,name=top_reply_openid,proto3" json:"top_reply_openid,omitempty"`
	LikeCount      uint64         `protobuf:"varint,8,opt,name=like_count,proto3" json:"like_count,omitempty"`
	CommentCount   uint64         `protobuf:"varint,9,opt,name=comment_count,proto3" json:"comment_count,omitempty"`
	IsLike         bool           `protobuf:"varint,10,opt,name=is_like,proto3" json:"is_like,omitempty"`
	CommentTime    string         `protobuf:"bytes,11,opt,name=comment_time,proto3" json:"comment_time,omitempty"`
	ArticleId      uint64         `protobuf:"varint,12,opt,name=article_id,proto3" json:"article_id,omitempty"`
}

func (x *AddCommunityCommentReply) Reset() {
	*x = AddCommunityCommentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommunityCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommunityCommentReply) ProtoMessage() {}

func (x *AddCommunityCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommunityCommentReply.ProtoReflect.Descriptor instead.
func (*AddCommunityCommentReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{4}
}

func (x *AddCommunityCommentReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddCommunityCommentReply) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddCommunityCommentReply) GetUserinfo() *CommunityUser {
	if x != nil {
		return x.Userinfo
	}
	return nil
}

func (x *AddCommunityCommentReply) GetReplyUserinfo() *CommunityUser {
	if x != nil {
		return x.ReplyUserinfo
	}
	return nil
}

func (x *AddCommunityCommentReply) GetTopReplyId() uint64 {
	if x != nil {
		return x.TopReplyId
	}
	return 0
}

func (x *AddCommunityCommentReply) GetReplyId() uint64 {
	if x != nil {
		return x.ReplyId
	}
	return 0
}

func (x *AddCommunityCommentReply) GetTopReplyOpenid() string {
	if x != nil {
		return x.TopReplyOpenid
	}
	return ""
}

func (x *AddCommunityCommentReply) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *AddCommunityCommentReply) GetCommentCount() uint64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *AddCommunityCommentReply) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *AddCommunityCommentReply) GetCommentTime() string {
	if x != nil {
		return x.CommentTime
	}
	return ""
}

func (x *AddCommunityCommentReply) GetArticleId() uint64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type GetCommunityMyProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *GetCommunityMyProfileRequest) Reset() {
	*x = GetCommunityMyProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityMyProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityMyProfileRequest) ProtoMessage() {}

func (x *GetCommunityMyProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityMyProfileRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityMyProfileRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommunityMyProfileRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *GetCommunityMyProfileRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GetCommunityMyProfileRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetCommunityMyProfileRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type GetCommunityMyProfileReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl string `protobuf:"bytes,3,opt,name=avatar_url,proto3" json:"avatar_url,omitempty"`
}

func (x *GetCommunityMyProfileReply) Reset() {
	*x = GetCommunityMyProfileReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityMyProfileReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityMyProfileReply) ProtoMessage() {}

func (x *GetCommunityMyProfileReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityMyProfileReply.ProtoReflect.Descriptor instead.
func (*GetCommunityMyProfileReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{6}
}

func (x *GetCommunityMyProfileReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCommunityMyProfileReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetCommunityMyProfileReply) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

type UpdateCommunityMyProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Id        uint64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Username  string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`
	AvatarUrl string `protobuf:"bytes,7,opt,name=avatar_url,proto3" json:"avatar_url,omitempty"`
}

func (x *UpdateCommunityMyProfileRequest) Reset() {
	*x = UpdateCommunityMyProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityMyProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityMyProfileRequest) ProtoMessage() {}

func (x *UpdateCommunityMyProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityMyProfileRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommunityMyProfileRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCommunityMyProfileRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *UpdateCommunityMyProfileRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UpdateCommunityMyProfileRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *UpdateCommunityMyProfileRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UpdateCommunityMyProfileRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateCommunityMyProfileRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateCommunityMyProfileRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

type AddCommunityFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Id        uint64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	Type      uint32 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
	Content   string `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AddCommunityFeedbackRequest) Reset() {
	*x = AddCommunityFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommunityFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommunityFeedbackRequest) ProtoMessage() {}

func (x *AddCommunityFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommunityFeedbackRequest.ProtoReflect.Descriptor instead.
func (*AddCommunityFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{8}
}

func (x *AddCommunityFeedbackRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *AddCommunityFeedbackRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *AddCommunityFeedbackRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *AddCommunityFeedbackRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *AddCommunityFeedbackRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddCommunityFeedbackRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *AddCommunityFeedbackRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type UpdateCommunityLikeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Tid       uint64 `protobuf:"varint,5,opt,name=tid,proto3" json:"tid,omitempty"`
	Type      uint64 `protobuf:"varint,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *UpdateCommunityLikeRequest) Reset() {
	*x = UpdateCommunityLikeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityLikeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityLikeRequest) ProtoMessage() {}

func (x *UpdateCommunityLikeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityLikeRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommunityLikeRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCommunityLikeRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *UpdateCommunityLikeRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *UpdateCommunityLikeRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *UpdateCommunityLikeRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *UpdateCommunityLikeRequest) GetTid() uint64 {
	if x != nil {
		return x.Tid
	}
	return 0
}

func (x *UpdateCommunityLikeRequest) GetType() uint64 {
	if x != nil {
		return x.Type
	}
	return 0
}

type DeleteCommunityByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Id        uint64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
	ArticleId uint64 `protobuf:"varint,6,opt,name=article_id,proto3" json:"article_id,omitempty"`
}

func (x *DeleteCommunityByIdRequest) Reset() {
	*x = DeleteCommunityByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommunityByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommunityByIdRequest) ProtoMessage() {}

func (x *DeleteCommunityByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommunityByIdRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommunityByIdRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCommunityByIdRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *DeleteCommunityByIdRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *DeleteCommunityByIdRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *DeleteCommunityByIdRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *DeleteCommunityByIdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteCommunityByIdRequest) GetArticleId() uint64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

type UpdateCommunityLikeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLike bool `protobuf:"varint,1,opt,name=is_like,proto3" json:"is_like,omitempty"`
}

func (x *UpdateCommunityLikeReply) Reset() {
	*x = UpdateCommunityLikeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCommunityLikeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommunityLikeReply) ProtoMessage() {}

func (x *UpdateCommunityLikeReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommunityLikeReply.ProtoReflect.Descriptor instead.
func (*UpdateCommunityLikeReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateCommunityLikeReply) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

type PushCommunityArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string   `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string   `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string   `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string   `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Photos    []*Photo `protobuf:"bytes,5,rep,name=photos,proto3" json:"photos,omitempty"`
	Content   string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *PushCommunityArticleRequest) Reset() {
	*x = PushCommunityArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushCommunityArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushCommunityArticleRequest) ProtoMessage() {}

func (x *PushCommunityArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushCommunityArticleRequest.ProtoReflect.Descriptor instead.
func (*PushCommunityArticleRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{12}
}

func (x *PushCommunityArticleRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *PushCommunityArticleRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *PushCommunityArticleRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *PushCommunityArticleRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *PushCommunityArticleRequest) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *PushCommunityArticleRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type GetCosCredentialRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *GetCosCredentialRequest) Reset() {
	*x = GetCosCredentialRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosCredentialRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosCredentialRequest) ProtoMessage() {}

func (x *GetCosCredentialRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosCredentialRequest.ProtoReflect.Descriptor instead.
func (*GetCosCredentialRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{13}
}

func (x *GetCosCredentialRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *GetCosCredentialRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GetCosCredentialRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetCosCredentialRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

type GetCosCredentialReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TmpSecretId  string `protobuf:"bytes,1,opt,name=tmp_secret_id,proto3" json:"tmp_secret_id,omitempty"`
	TmpSecretKey string `protobuf:"bytes,2,opt,name=tmp_secret_key,proto3" json:"tmp_secret_key,omitempty"`
	SessionToken string `protobuf:"bytes,3,opt,name=session_token,proto3" json:"session_token,omitempty"`
	StartTime    uint64 `protobuf:"varint,4,opt,name=start_time,proto3" json:"start_time,omitempty"`
	ExpiredTime  uint64 `protobuf:"varint,5,opt,name=expired_time,proto3" json:"expired_time,omitempty"`
}

func (x *GetCosCredentialReply) Reset() {
	*x = GetCosCredentialReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCosCredentialReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCosCredentialReply) ProtoMessage() {}

func (x *GetCosCredentialReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCosCredentialReply.ProtoReflect.Descriptor instead.
func (*GetCosCredentialReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{14}
}

func (x *GetCosCredentialReply) GetTmpSecretId() string {
	if x != nil {
		return x.TmpSecretId
	}
	return ""
}

func (x *GetCosCredentialReply) GetTmpSecretKey() string {
	if x != nil {
		return x.TmpSecretKey
	}
	return ""
}

func (x *GetCosCredentialReply) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *GetCosCredentialReply) GetStartTime() uint64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GetCosCredentialReply) GetExpiredTime() uint64 {
	if x != nil {
		return x.ExpiredTime
	}
	return 0
}

type GetCommunityArticleListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Page      uint64 `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  uint64 `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetCommunityArticleListRequest) Reset() {
	*x = GetCommunityArticleListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityArticleListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityArticleListRequest) ProtoMessage() {}

func (x *GetCommunityArticleListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityArticleListRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityArticleListRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{15}
}

func (x *GetCommunityArticleListRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *GetCommunityArticleListRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GetCommunityArticleListRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetCommunityArticleListRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetCommunityArticleListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommunityArticleListRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetCommunityArticleListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*GetCommunityArticleReply `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetCommunityArticleListReply) Reset() {
	*x = GetCommunityArticleListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityArticleListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityArticleListReply) ProtoMessage() {}

func (x *GetCommunityArticleListReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityArticleListReply.ProtoReflect.Descriptor instead.
func (*GetCommunityArticleListReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{16}
}

func (x *GetCommunityArticleListReply) GetResults() []*GetCommunityArticleReply {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetCommunityCommentListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	ArticleId uint64 `protobuf:"varint,5,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	CommentId uint64 `protobuf:"varint,6,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Page      uint64 `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  uint64 `protobuf:"varint,8,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetCommunityCommentListRequest) Reset() {
	*x = GetCommunityCommentListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityCommentListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityCommentListRequest) ProtoMessage() {}

func (x *GetCommunityCommentListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityCommentListRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityCommentListRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{17}
}

func (x *GetCommunityCommentListRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *GetCommunityCommentListRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GetCommunityCommentListRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetCommunityCommentListRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetCommunityCommentListRequest) GetArticleId() uint64 {
	if x != nil {
		return x.ArticleId
	}
	return 0
}

func (x *GetCommunityCommentListRequest) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *GetCommunityCommentListRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCommunityCommentListRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetCommunityCommentListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*AddCommunityCommentReply `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetCommunityCommentListReply) Reset() {
	*x = GetCommunityCommentListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityCommentListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityCommentListReply) ProtoMessage() {}

func (x *GetCommunityCommentListReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityCommentListReply.ProtoReflect.Descriptor instead.
func (*GetCommunityCommentListReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{18}
}

func (x *GetCommunityCommentListReply) GetResults() []*AddCommunityCommentReply {
	if x != nil {
		return x.Results
	}
	return nil
}

type GetCommunityArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty"`
	Timestamp string `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Sign      string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Openid    string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	Id        uint64 `protobuf:"varint,5,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCommunityArticleRequest) Reset() {
	*x = GetCommunityArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityArticleRequest) ProtoMessage() {}

func (x *GetCommunityArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityArticleRequest.ProtoReflect.Descriptor instead.
func (*GetCommunityArticleRequest) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{19}
}

func (x *GetCommunityArticleRequest) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *GetCommunityArticleRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GetCommunityArticleRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *GetCommunityArticleRequest) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetCommunityArticleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type Photo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Width  uint32 `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Photo) Reset() {
	*x = Photo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Photo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Photo) ProtoMessage() {}

func (x *Photo) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Photo.ProtoReflect.Descriptor instead.
func (*Photo) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{20}
}

func (x *Photo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Photo) GetWidth() uint32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Photo) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetCommunityArticleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubUserName   string   `protobuf:"bytes,1,opt,name=pub_user_name,proto3" json:"pub_user_name,omitempty"`
	PubUserAvatar string   `protobuf:"bytes,2,opt,name=pub_user_avatar,proto3" json:"pub_user_avatar,omitempty"`
	PubContent    string   `protobuf:"bytes,3,opt,name=pub_content,proto3" json:"pub_content,omitempty"`
	PubTime       string   `protobuf:"bytes,4,opt,name=pub_time,proto3" json:"pub_time,omitempty"`
	LikeCount     uint64   `protobuf:"varint,5,opt,name=like_count,proto3" json:"like_count,omitempty"`
	ComCount      uint64   `protobuf:"varint,6,opt,name=com_count,proto3" json:"com_count,omitempty"`
	IsLike        bool     `protobuf:"varint,7,opt,name=is_like,proto3" json:"is_like,omitempty"`
	Photos        []*Photo `protobuf:"bytes,8,rep,name=photos,proto3" json:"photos,omitempty"`
	Id            uint64   `protobuf:"varint,9,opt,name=id,proto3" json:"id,omitempty"`
	Openid        string   `protobuf:"bytes,10,opt,name=openid,proto3" json:"openid,omitempty"`
}

func (x *GetCommunityArticleReply) Reset() {
	*x = GetCommunityArticleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wxxcx_v1_community_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommunityArticleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommunityArticleReply) ProtoMessage() {}

func (x *GetCommunityArticleReply) ProtoReflect() protoreflect.Message {
	mi := &file_wxxcx_v1_community_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommunityArticleReply.ProtoReflect.Descriptor instead.
func (*GetCommunityArticleReply) Descriptor() ([]byte, []int) {
	return file_wxxcx_v1_community_proto_rawDescGZIP(), []int{21}
}

func (x *GetCommunityArticleReply) GetPubUserName() string {
	if x != nil {
		return x.PubUserName
	}
	return ""
}

func (x *GetCommunityArticleReply) GetPubUserAvatar() string {
	if x != nil {
		return x.PubUserAvatar
	}
	return ""
}

func (x *GetCommunityArticleReply) GetPubContent() string {
	if x != nil {
		return x.PubContent
	}
	return ""
}

func (x *GetCommunityArticleReply) GetPubTime() string {
	if x != nil {
		return x.PubTime
	}
	return ""
}

func (x *GetCommunityArticleReply) GetLikeCount() uint64 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *GetCommunityArticleReply) GetComCount() uint64 {
	if x != nil {
		return x.ComCount
	}
	return 0
}

func (x *GetCommunityArticleReply) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *GetCommunityArticleReply) GetPhotos() []*Photo {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *GetCommunityArticleReply) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCommunityArticleReply) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

var File_wxxcx_v1_community_proto protoreflect.FileDescriptor

var file_wxxcx_v1_community_proto_rawDesc = []byte{
	0x0a, 0x18, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x77, 0x78, 0x78, 0x63,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x77, 0x78, 0x78, 0x63, 0x78,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xc8, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11,
	0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x02, 0x0a, 0x23,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a,
	0x11, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x32, 0x0a, 0x14, 0x69,
	0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x34, 0x0a, 0x15, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15,
	0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xc6, 0x02, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x73,
	0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x22, 0xde, 0x03, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77,
	0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x0e, 0x72, 0x65, 0x70,
	0x6c, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x74, 0x6f, 0x70, 0x5f,
	0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x74, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c, 0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x22, 0x7e, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0xcd,
	0x01, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0xbb,
	0x01, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa2, 0x01, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0xac, 0x01, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x22, 0x34, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x5f, 0x6c, 0x69, 0x6b, 0x65, 0x22, 0xca, 0x01, 0x0a, 0x1b, 0x50, 0x75, 0x73, 0x68, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x68, 0x6f, 0x74,
	0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x22, 0x79, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x22, 0xcf,
	0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6d, 0x70, 0x5f,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x74, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x6d, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x22, 0xb1, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x22, 0x66, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0xef, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x66,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x46,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xdb,
	0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x70,
	0x75, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x75, 0x62, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x75, 0x62, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6b,
	0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69,
	0x6b, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x6b,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68,
	0x6f, 0x74, 0x6f, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x32, 0x81, 0x13, 0x0a,
	0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x98, 0x01, 0x0a, 0x19, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6e,
	0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x37, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22,
	0x26, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x2f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a, 0x18, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4d, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2e, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x22, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x79, 0x2f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x91,
	0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x4d, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x77, 0x78,
	0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x2a, 0x22, 0x2f, 0x77, 0x78,
	0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x79,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x3a,
	0x01, 0x2a, 0x12, 0xab, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x4d, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x32, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20,
	0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2f, 0x6d, 0x79, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x9e, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x2e, 0x77, 0x78, 0x78,
	0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4d, 0x79, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x77,
	0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4d, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x12, 0x96, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x33,
	0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x4d, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x1a, 0x22, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x6d, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xa6, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x77, 0x78, 0x78,
	0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0xa6, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x32, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f,
	0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x95, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x2e, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x77, 0x78, 0x78,
	0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x77,
	0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77,
	0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x21, 0x22, 0x1c, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x61, 0x64, 0x64,
	0x3a, 0x01, 0x2a, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2f, 0x2e, 0x77,
	0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x46, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f,
	0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x61, 0x64, 0x64, 0x3a, 0x01, 0x2a, 0x12,
	0x89, 0x01, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74,
	0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x77, 0x78, 0x78, 0x63,
	0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2f, 0x70, 0x75, 0x73, 0x68, 0x3a, 0x01, 0x2a, 0x12, 0x95, 0x01, 0x0a, 0x13,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4c,
	0x69, 0x6b, 0x65, 0x12, 0x2e, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x77, 0x78, 0x78, 0x63,
	0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x6c, 0x69, 0x6b, 0x65,
	0x3a, 0x01, 0x2a, 0x12, 0x93, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x73, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2b, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6f, 0x73, 0x2f, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x55, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x77, 0x78, 0x78, 0x63,
	0x78, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x69, 0x6e, 0x67,
	0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x53,
	0x75, 0x4b, 0x61, 0x69, 0x46, 0x65, 0x69, 0x2f, 0x67, 0x6f, 0x2d, 0x77, 0x78, 0x78, 0x63, 0x78,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x77, 0x78, 0x78, 0x63, 0x78, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wxxcx_v1_community_proto_rawDescOnce sync.Once
	file_wxxcx_v1_community_proto_rawDescData = file_wxxcx_v1_community_proto_rawDesc
)

func file_wxxcx_v1_community_proto_rawDescGZIP() []byte {
	file_wxxcx_v1_community_proto_rawDescOnce.Do(func() {
		file_wxxcx_v1_community_proto_rawDescData = protoimpl.X.CompressGZIP(file_wxxcx_v1_community_proto_rawDescData)
	})
	return file_wxxcx_v1_community_proto_rawDescData
}

var file_wxxcx_v1_community_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_wxxcx_v1_community_proto_goTypes = []interface{}{
	(*GetCommunitySettingNoticeReply)(nil),      // 0: wxxcx.v1.community.GetCommunitySettingNoticeReply
	(*UpdateCommunitySettingNoticeRequest)(nil), // 1: wxxcx.v1.community.UpdateCommunitySettingNoticeRequest
	(*AddCommunityCommentRequest)(nil),          // 2: wxxcx.v1.community.AddCommunityCommentRequest
	(*CommunityUser)(nil),                       // 3: wxxcx.v1.community.CommunityUser
	(*AddCommunityCommentReply)(nil),            // 4: wxxcx.v1.community.AddCommunityCommentReply
	(*GetCommunityMyProfileRequest)(nil),        // 5: wxxcx.v1.community.GetCommunityMyProfileRequest
	(*GetCommunityMyProfileReply)(nil),          // 6: wxxcx.v1.community.GetCommunityMyProfileReply
	(*UpdateCommunityMyProfileRequest)(nil),     // 7: wxxcx.v1.community.UpdateCommunityMyProfileRequest
	(*AddCommunityFeedbackRequest)(nil),         // 8: wxxcx.v1.community.AddCommunityFeedbackRequest
	(*UpdateCommunityLikeRequest)(nil),          // 9: wxxcx.v1.community.UpdateCommunityLikeRequest
	(*DeleteCommunityByIdRequest)(nil),          // 10: wxxcx.v1.community.DeleteCommunityByIdRequest
	(*UpdateCommunityLikeReply)(nil),            // 11: wxxcx.v1.community.UpdateCommunityLikeReply
	(*PushCommunityArticleRequest)(nil),         // 12: wxxcx.v1.community.PushCommunityArticleRequest
	(*GetCosCredentialRequest)(nil),             // 13: wxxcx.v1.community.GetCosCredentialRequest
	(*GetCosCredentialReply)(nil),               // 14: wxxcx.v1.community.GetCosCredentialReply
	(*GetCommunityArticleListRequest)(nil),      // 15: wxxcx.v1.community.GetCommunityArticleListRequest
	(*GetCommunityArticleListReply)(nil),        // 16: wxxcx.v1.community.GetCommunityArticleListReply
	(*GetCommunityCommentListRequest)(nil),      // 17: wxxcx.v1.community.GetCommunityCommentListRequest
	(*GetCommunityCommentListReply)(nil),        // 18: wxxcx.v1.community.GetCommunityCommentListReply
	(*GetCommunityArticleRequest)(nil),          // 19: wxxcx.v1.community.GetCommunityArticleRequest
	(*Photo)(nil),                               // 20: wxxcx.v1.community.Photo
	(*GetCommunityArticleReply)(nil),            // 21: wxxcx.v1.community.GetCommunityArticleReply
	(*CommonRequest)(nil),                       // 22: wxxcx.v1.common.CommonRequest
	(*emptypb.Empty)(nil),                       // 23: google.protobuf.Empty
}
var file_wxxcx_v1_community_proto_depIdxs = []int32{
	3,  // 0: wxxcx.v1.community.AddCommunityCommentReply.userinfo:type_name -> wxxcx.v1.community.CommunityUser
	3,  // 1: wxxcx.v1.community.AddCommunityCommentReply.reply_userinfo:type_name -> wxxcx.v1.community.CommunityUser
	20, // 2: wxxcx.v1.community.PushCommunityArticleRequest.photos:type_name -> wxxcx.v1.community.Photo
	21, // 3: wxxcx.v1.community.GetCommunityArticleListReply.results:type_name -> wxxcx.v1.community.GetCommunityArticleReply
	4,  // 4: wxxcx.v1.community.GetCommunityCommentListReply.results:type_name -> wxxcx.v1.community.AddCommunityCommentReply
	20, // 5: wxxcx.v1.community.GetCommunityArticleReply.photos:type_name -> wxxcx.v1.community.Photo
	22, // 6: wxxcx.v1.community.Community.GetCommunitySettingNotice:input_type -> wxxcx.v1.common.CommonRequest
	1,  // 7: wxxcx.v1.community.Community.UpdateCommunitySettingNotice:input_type -> wxxcx.v1.community.UpdateCommunitySettingNoticeRequest
	10, // 8: wxxcx.v1.community.Community.DeleteCommunityMyArticle:input_type -> wxxcx.v1.community.DeleteCommunityByIdRequest
	10, // 9: wxxcx.v1.community.Community.DeleteCommunityMyComment:input_type -> wxxcx.v1.community.DeleteCommunityByIdRequest
	15, // 10: wxxcx.v1.community.Community.GetCommunityMyArticleList:input_type -> wxxcx.v1.community.GetCommunityArticleListRequest
	5,  // 11: wxxcx.v1.community.Community.GetCommunityMyProfile:input_type -> wxxcx.v1.community.GetCommunityMyProfileRequest
	7,  // 12: wxxcx.v1.community.Community.UpdateCommunityMyProfile:input_type -> wxxcx.v1.community.UpdateCommunityMyProfileRequest
	15, // 13: wxxcx.v1.community.Community.GetCommunityArticleList:input_type -> wxxcx.v1.community.GetCommunityArticleListRequest
	17, // 14: wxxcx.v1.community.Community.GetCommunityCommentList:input_type -> wxxcx.v1.community.GetCommunityCommentListRequest
	19, // 15: wxxcx.v1.community.Community.GetCommunityArticle:input_type -> wxxcx.v1.community.GetCommunityArticleRequest
	2,  // 16: wxxcx.v1.community.Community.AddCommunityComment:input_type -> wxxcx.v1.community.AddCommunityCommentRequest
	8,  // 17: wxxcx.v1.community.Community.AddCommunityFeedback:input_type -> wxxcx.v1.community.AddCommunityFeedbackRequest
	12, // 18: wxxcx.v1.community.Community.PushCommunityArticle:input_type -> wxxcx.v1.community.PushCommunityArticleRequest
	9,  // 19: wxxcx.v1.community.Community.UpdateCommunityLike:input_type -> wxxcx.v1.community.UpdateCommunityLikeRequest
	13, // 20: wxxcx.v1.community.Community.GetCosCredential:input_type -> wxxcx.v1.community.GetCosCredentialRequest
	23, // 21: wxxcx.v1.community.Community.Ping:input_type -> google.protobuf.Empty
	0,  // 22: wxxcx.v1.community.Community.GetCommunitySettingNotice:output_type -> wxxcx.v1.community.GetCommunitySettingNoticeReply
	23, // 23: wxxcx.v1.community.Community.UpdateCommunitySettingNotice:output_type -> google.protobuf.Empty
	23, // 24: wxxcx.v1.community.Community.DeleteCommunityMyArticle:output_type -> google.protobuf.Empty
	23, // 25: wxxcx.v1.community.Community.DeleteCommunityMyComment:output_type -> google.protobuf.Empty
	16, // 26: wxxcx.v1.community.Community.GetCommunityMyArticleList:output_type -> wxxcx.v1.community.GetCommunityArticleListReply
	6,  // 27: wxxcx.v1.community.Community.GetCommunityMyProfile:output_type -> wxxcx.v1.community.GetCommunityMyProfileReply
	23, // 28: wxxcx.v1.community.Community.UpdateCommunityMyProfile:output_type -> google.protobuf.Empty
	16, // 29: wxxcx.v1.community.Community.GetCommunityArticleList:output_type -> wxxcx.v1.community.GetCommunityArticleListReply
	18, // 30: wxxcx.v1.community.Community.GetCommunityCommentList:output_type -> wxxcx.v1.community.GetCommunityCommentListReply
	21, // 31: wxxcx.v1.community.Community.GetCommunityArticle:output_type -> wxxcx.v1.community.GetCommunityArticleReply
	4,  // 32: wxxcx.v1.community.Community.AddCommunityComment:output_type -> wxxcx.v1.community.AddCommunityCommentReply
	23, // 33: wxxcx.v1.community.Community.AddCommunityFeedback:output_type -> google.protobuf.Empty
	23, // 34: wxxcx.v1.community.Community.PushCommunityArticle:output_type -> google.protobuf.Empty
	11, // 35: wxxcx.v1.community.Community.UpdateCommunityLike:output_type -> wxxcx.v1.community.UpdateCommunityLikeReply
	14, // 36: wxxcx.v1.community.Community.GetCosCredential:output_type -> wxxcx.v1.community.GetCosCredentialReply
	23, // 37: wxxcx.v1.community.Community.Ping:output_type -> google.protobuf.Empty
	22, // [22:38] is the sub-list for method output_type
	6,  // [6:22] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_wxxcx_v1_community_proto_init() }
func file_wxxcx_v1_community_proto_init() {
	if File_wxxcx_v1_community_proto != nil {
		return
	}
	file_wxxcx_v1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wxxcx_v1_community_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunitySettingNoticeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunitySettingNoticeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommunityCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommunityUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommunityCommentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityMyProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityMyProfileReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityMyProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommunityFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityLikeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommunityByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCommunityLikeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushCommunityArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosCredentialRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCosCredentialReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityArticleListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityArticleListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityCommentListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityCommentListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Photo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wxxcx_v1_community_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCommunityArticleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wxxcx_v1_community_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wxxcx_v1_community_proto_goTypes,
		DependencyIndexes: file_wxxcx_v1_community_proto_depIdxs,
		MessageInfos:      file_wxxcx_v1_community_proto_msgTypes,
	}.Build()
	File_wxxcx_v1_community_proto = out.File
	file_wxxcx_v1_community_proto_rawDesc = nil
	file_wxxcx_v1_community_proto_goTypes = nil
	file_wxxcx_v1_community_proto_depIdxs = nil
}
